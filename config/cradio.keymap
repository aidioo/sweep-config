#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// adjust mod-tap
&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <300>;
};

/ {

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
         };
        combo_bspc {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp BSPC>;
        };
        combo_del {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp DEL>;
        };
    };

/*
    conditional_layers {
        compatible = "zmk,conditional-layers";
        cond_layer_mgmt {
            if-layers = <1 4>;
            then-layer = <5>;
        };
    };
*/

    keymap {
        compatible = "zmk,keymap";

        base_layer {
        bindings = <
//      _____________________________________________________________________________________________________________________________________________________________________________________________
//      |       Q          |         W        |         F        |        P         |         B        |         J        |         L        |        U         |         Y        |       '        |
        &kp Q              &kp W              &kp F              &kp P              &kp B              &kp J              &kp L              &kp U              &kp Y              &kp APOS
//      |     GUI - A      |    ALT - R       |    CTRL - S      |     SHIFT - T    |         G        |         M        |   SHIFT - N      |    CTRL - E      |     ALT - Y      |    GUI - O     |
        &mt LGUI A         &mt LALT R         &mt LCTRL S        &mt LSHFT T        &kp G              &kp M              &mt LSHFT N        &mt LCTRL E        &mt LALT I         &mt LGUI O
//      |       Z          |         X        |         C        |        D         |         V        |         K        |         H        |        , <       |         . >      |       / ?      |
        &kp Z              &kp X              &kp C              &kp D              &kp V              &kp K              &kp H              &kp COMMA          &kp PERIOD         &kp SLASH
//                                                               |                  |                  |                  |                  |
                                                                 &lt 1 ENTER        &lt 2 BSPC         &lt 3 SPACE        &lt 4 TAB
        >;
        };
	
        numpad_layer {
        bindings = <
//      _____________________________________________________________________________________________________________________________________________________________________________________________
//      |       +          |        1 !       |        2 @       |       3 #        |         *        |         *        |        1 !       |        2 @       |       3 #        |       +        |
        &kp PLUS           &kp N1             &kp N2             &kp N3             &kp ASTRK          &kp ASTRK          &kp N1             &kp N2             &kp N3             &kp PLUS
//      |      - _         |        4 $       |        5 %       |       6 ^        |        / ?       |        / ?       |        4 $       |        5 %       |       6 ^        |      - _       |
        &kp MINUS          &kp N4             &kp N5             &kp N6             &kp FSLH           &kp FSLH           &kp N4             &kp N5             &kp N6             &kp MINUS
//      |      = +         |        7 &       |        8 *       |       9 (        |        0 )       |        0 )       |        7 &       |        8 *       |       9 (        |      = +       |
        &kp EQUAL          &kp N7             &kp N8             &kp N9             &kp N0             &kp N0             &kp N7             &kp N8             &kp N9             &kp EQUAL
//                                                               |                  |                  |                  |                  |
                                                                 &none              &none              &none              &none
        >;
        };

        symbols_layer {
        bindings = <
//      _____________________________________________________________________________________________________________________________________________________________________________________________
//      |        #         |        :         |        <         |         >        |        _         |         *        |        [ {       |       ] }        |         '  "       |               |
        &kp HASH           &kp COLON          &kp LT             &kp GT             &kp UNDERSCORE     &kp ASTRK          &kp LBKT           &kp RBKT           &kp SQT              &none
//      |        @         |       ; :        |        ?         |         !        |       - _        |        / ?       |         (        |        )         |          "         |        ~      |
        &kp AT             &kp SEMICOLON      &kp QMARK          &kp EXCL           &kp MINUS          &kp FSLH           &kp LPAR           &kp RPAR           &kp DQT              &kp TILDE
//      |        ^         |        |         |        $         |         %        |        &         |        \ |       |         {        |        }         |         ` ~        |               |
        &kp CARET          &kp PIPE           &kp DLLR           &kp PRCNT          &kp AMPS           &kp BSLH           &kp LBRC           &kp RBRC           &kp GRAVE            &none
//                                                               |                  |                  |                  |                  |
                                                                 &none              &none              &none              &none
        >;
        };

        navigation_layer {
        bindings = <
//      _____________________________________________________________________________________________________________________________________________________________________________________________
//      |                  |                  |                  |                  |                  |                  |                  |                  |                    |               |
        &kp K_CUT          &kp F1             &kp F2             &kp F3             &kp F10            &kp PSCRN          &kp PG_UP          &kp PG_DN          &kp HOME             &kp END
//      |                  |                  |                  |                  |                  |                  |                  |                  |                    |               |
        &kp K_COPY         &kp F4             &kp F5             &kp F6             &kp F11            &none              &kp LEFT           &kp DOWN           &kp UP               &kp RIGHT
//      |                  |                  |                  |                  |                  |                  |                  |                  |                    |               |
        &kp K_PASTE        &kp F7             &kp F8             &kp F9             &kp F12            &none              &kp C_AC_CUT       &kp C_AC_COPY      &kp C_AC_PASTE       &none
//                                                               |                  |                  |                  |                  |
                                                                 &none              &none              &none              &none
        >;
        };

        media_layer {
        bindings = <
//      _____________________________________________________________________________________________________________________________________________________________________________________________
//      |                  |                  |                  |                  |                  |                  |                  |                  |                    |               |
        &none              &none              &none              &kp C_VOL_UP       &kp C_BRI_UP       &none              &kp C_NEXT         &kp C_FF           &kp C_REC            &none
//      |                  |                  |                  |                  |                  |                  |                  |                  |                    |               |
        &none              &none              &kp C_AL_NEXT_TASK &kp C_MUTE         &kp C_BRI_MAX      &none              &kp C_PP           &kp C_SLOW         &kp C_STOP           &none
//      |                  |                  |                  |                  |                  |                  |                  |                  |                    |               |
        &none              &none              &none              &kp C_VOL_DN       &kp C_BRI_MIN      &none              &kp C_PREV         &kp C_RW           &kp C_EJECT          &none
//                                                               |                  |                  |                  |                  |
                                                                 &kp C_AL_PREV_TASK &kp C_BRI_DN       &none              &none
        >;
        };
    };
};
